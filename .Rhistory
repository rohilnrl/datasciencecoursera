find.package("devtools")
library(devtools)
find_rtools()
find.package("KernSmooth")
library("KernSmooth")
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(c(1, 2, 3))
z <- makeVector(c(1, 2, 3))
z
z[1]
z[2]()
z[2]
class(z[2])
class(z[[2])
class(z[[2]])
z[[2]]()
z[[1]](c(2, 3, 4))
z[[2]]()
z[[4]]()
z[[3]]()
str(str)
str(lm)
dir()
ls()
str(ls)
args(ls)
formal(ls)
formals(ls)
x <- rnorm(100, 2, 4)
x
summary(x)
str(x)
f <- gl(40, 10)
str(f)
length(f)
summary(f)
library(datasets)
head(airquality)
str(airquality)
table(airquality)
rm(f)
str(m)
x <- rnorm(10)
x
x <- rnorm(10, 20, 2)
x
mean(x)
sd(x)
summary(x)
x <- rnorm(10, 20, 2)
summary(x)
set.seed(1)
x <- rnorm(10, 20, 2)
rnorm(5)
set.seed(1)
rnorm(5)
set.seed(1)
rnorm(5)
x
set.seed(1)
rnorm(5)
rpois(10, 1)
ppois(10, 2)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2*x + e
summary(y)
plot(x, y)
set.seed(1)
sample(1:10, 4)
sample(1:10, 4)
sample(1:10)
sample(1:10)
sample(1:10, replace = T)
system.time(2 + 2)
system.time(2 + 2 == 4)
system.time(for (i in 1:100) {})
system.time(readLines("http://www.google.com"))
set.seed(1)
rpois
rpois(5, 2)
setwd("~/Data Science/datasciencecoursera")
?read.csv
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
View(outcome)
ncol(outcome)
names(outcome)
class(outcome[, 11])
head(outcome[, 11])
numeric(outcome[, 11])
as.numeric(outcome[, 11])
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
names[outcome[, 11]]
names[outcome
]
names(outcome[, 11])
names(outcome)[11]
hist(outcome[, 11], xlab = "Heart attack mortality rate")
min(outcome[, 11])
min(outcome[, 11][!is.na(outcome[, 11]])
min(outcome[, 11][!is.na(outcome[, 11])])
which.min(outcome[, 11][!is.na(outcome[, 11])])
outcome[, 2][which.min(outcome[, 11][!is.na(outcome[, 11])])]
names(outcome)
?stop
stop()
x <- function( {})
x <- function() {stop()}
x()
x <- function() {stop("invalid")}
x()
source('best.R')
best("AL", "heart attack")
source('best.R')
best("AL", "heart attack")
best("AL", "heart failure")
source('best.R')
best("AL", "heart failure")
best("AL", "pneumonia")
best("AL", "hert attack")
which(outcome$State == "AL")
which(outcome$State == "BB")
length(which(outcome$State == "BB"))
length(which(outcome$State == "AL"))
source('best.R')
best('AL', "heart attack")
source('best.R')
best('AL', "heart attack")
best('BB', "heart attack")
data <- outcome
outcome <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
lowest_death <- which(data$outcome == min(data$outcome))
data$outcome
outcome
data[[outcome]]
lowest_death <- which(data[[outcome]] == min(data[[outcome]]))
lowest_death
min(data[[outcome]])
outcome_data <- data[[outcome]][!is.na(data[[outcome]])]
lowest_death <- which(outcome_data == outcome_data)
min(outcome_data)
lowest_death <- which(outcome_data == min(outcome_data)
)
lowest_death <- which(outcome_data == min(outcome_data))
lowest_death
length(lowest_death)
data[["Hospital.Name"]][lowest_death]
data[["Hospital.Name"]][lowest_death]
sort(data[["Hospital.Name"]][lowest_death])
class(data[["Hospital.Name"]][lowest_death])
hohospitals <- sort(data[["Hospital.Name"]][lowest_death])
hospitals <- sort(data[["Hospital.Name"]][lowest_death])
hospitals[1]
source('best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best <- function(state, outcome) {
if (outcome == "heart attack") {
outcome <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
outcome <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
} else if (outcome == "pneumonia") {
outcome <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
} else {
stop("invalid outcome")
}
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if (length(which(data$State == state)) == 0) {
stop("invalid state")
} else {
data <- data[which(data$State == state), ]
}
outcome_data <- data[[outcome]][!is.na(data[[outcome]])]
lowest_death <- which(outcome_data == min(outcome_data))
if (length(lowest_death) == 1) {
return (data[["Hospital.Name"]][lowest_death])
} else {
hospitals <- sort(data[["Hospital.Name"]][lowest_death])
return (hospitals[1])
}
}
best("MD", "pneumonia")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- data[which(data$State == "TX"), ]
head(data)
summary(Data)
summary(data)
str(data)
sapply(data$State, unique)
unique(data$State)
min(data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
outcome_data <- data[["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]]p!is.na(data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
outcome_data <- data[["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]][!is.na(data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)]
min(outcome_data)
which(outcome_data == min(outcome_data))
data$Hospital.Name[which(outcome_data == min(outcome_data))]
data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure[which(data$Hospital.Name == "HARRIS COUNTY HOSPITAL DISTRICT")]
data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure[which(data$Hospital.Name == "FORT DUNCAN MEDICAL CENTER")]
source('best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("TX", "heart attack")
debug(best)
best("TX", "heart attack")
attributes(best)
best("TX", "heart attack")
ls()
head(data)
data[which(data$Hospital.Name == "CYPRESS FAIRBANKS MEDICAL CENTER")]
data[which(data$Hospital.Name == "CYPRESS FAIRBANKS MEDICAL CENTER"), ]
class(data[which(data$Hospital.Name == "CYPRESS FAIRBANKS MEDICAL CENTER"), ])
dim(data[which(data$Hospital.Name == "CYPRESS FAIRBANKS MEDICAL CENTER"), ])
data[which(data$Hospital.Name == "COVENANT HOSPITAL PLAINVIEW"), ]
min(outcome_data)
outcome_data[lowest_death]
outcome <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
outcome <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
outcome <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- data[which(data$State == state), ]
data <- data[which(data$State == state), ]
data <- data[which(data$State == "TX"), ]
data[[outcome]]
data[[outcome]] == "12.0"
data[[outcome]] <- as.numeric(data[[outcome]])
data[[outcome]] == "12.0"
data[[outcome]] == 12
data[[outcome]]
outcome_data <- data[[outcome]][!is.na(data[[outcome]])]
outcome_data
data[[outcome]]
lowest_death <- min(outcome_data)
lowest_death <- which(lowest_death == data[[outcome]])
data[["Hospital.Name"]][lowest_death]
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
"JOHNS HOPKINS HOSPITAL, THE"
best("MD", "heart attack")
data[["Hospital.Name"]][lowest_death]
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source("rankhospital.R")
rankhospital("TX", "heart attack", "best")
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
data <- c(4, 5, 1)
data
sort(data)
source("rankhospital.R")
rankhospital("MN", "heart attack", 5000)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
outcome_data_sorted
lowest_death
lowest_death
source("rankhospital.R")
rankhospital("MN", "heart attack", 5000)
rankhospital("MD", "heart attack", "worst"
)
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 3)
rankhospital("TX", "heart failure", 1)
rankhospital("TX", "heart failure", 2)
rankhospital("TX", "heart failure", 3)
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 5)
rankhospital("TX", "heart failure", 6)
source("rankall.R")
rankall("heart attack", 3)
source("rankall.R")
rankall("heart attack", 3)
sousource("rankall.R")
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
warnings()
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
AL < AK
"AL" < "AK"
data<- rankall("heart attack", 20)
data
class(Data)
class(data)
order(data$state)
order(sort(data$state)
)
sort(data$state)
"AL" > "AK"
class(data$state)
tail(rankall("pneumonia", "worst"), 3)
source("rankhospital.R")
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankhospital.R")
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("rankhospital.R")
tail(rankall("heart failure"), 10)
tail(rankall("heart failure"), 11)
source('best.R')
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
