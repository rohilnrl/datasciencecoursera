find.package("devtools")
library(devtools)
find_rtools()
find.package("KernSmooth")
library("KernSmooth")
library(swirl)
swirl()
TRUE == TRUE
(F == T) == F
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
play()
8 == 8.0
nxt()
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function("My first function!")
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x) {x+1}, 6)
evaluate(function(x) {x[1]}, c(8, 4, 0))
evaluate(function(x) {x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!", sep = " ")
play()
paste("hi", 4)
paste("hi", 4, collapse = "")
paste("hi", c(4, 3), collapse = "")
paste("hi", c(4, 3), collapse = " ")
paste(c("a", "b"), c(4, 3), collapse = " ")
paste(c("a", "b"), c(4, 3), collapse = NULL)
paste(c("a", "b"), c(4, 3), c(4L, 3L), collapse = NULL)
paste(LETTER, c(4, 3), c(4L, 3L), collapse = NULL)
paste(LETTERS, c(4, 3), c(4L, 3L), collapse = NULL)
paste(LETTERS, c(4, 3), c(4L, 3L), collapse = NULL, sep = '-')
nxt()
submit()
telegram(c("Don't", "go", "into", "the", "light!"))
play()
telegram(c("Don't", "go", "into", "the", "light!"))
source("telegram.R")
nxt()
submit()
mad_libs("Auckland", "gleaming", "birb")
submit()
'I' %p% 'love' %p% 'R'
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unlcass(d2)
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = "days")
x <- c(1, 2)
x <- 0
if (1) {}
if (1) { print(1)}
if (4) {print(1)}
if(c(TRUE, FALSE)) {print(3)}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f <- function(x {})
f <- function(x) {}
f <- function(x) {}
f <- function(x) {
z <- 4
x + g(x)
}
g <- function(y) {
y + z
}
f(3)
x <- c(1, 2)
cbind(x, 3)
sys.parent()
sys.frame()
getwd()
setwd("~/Data Science/datasciencecoursera")
getwd()
data <- read.csv(file.path("specdata", "001.csv"))
head(data)
sample(data)
sample(data, 10)
sample(data)
sample(data, size = 10)
sample(data, size = 10, TRUE)
head(data)
id = 001
paste(id, ".csv", collapse = "")
paste("001", ".csv", collapse = "")
paste("001", ".csv", collapse = "", sep = "")
id = 1
id <- paste("00", as.character(id), collapse = "", sep = "")
}
id <- paste("00", as.character(id), collapse = "", sep = "")
id
id <- paste("00", as.character(id), collapse = "", sep = "")
id = 1
id <- paste("00", as.character(id), collapse = "", sep = "")
id = 23
id <- paste("0", as.character(id), collapse = "", sep = "")
source("pollutantmean.R")
pollutantmean("specdata", "sulfur", "2:16")
pollutantmean("specdata", "sulfur", 2:16)
source("pollutantmean.R")
pollutantmean("specdata", "sulfur", 2:16)
paste("001", ".csv", sep = "")
file.path("specdata", paste("001", ".csv", sep = ""))
pollutant <- "sulfur"
registered_pollutants <- data[[pollutant]][!is.na(data[[pollutant]])]
registered_pollutants <- data[[pollutant]]
data
head(data)
pollutant <- "sulfate"
registered_pollutants <- data[[pollutant]][!is.na(data[[pollutant]])]
head(registered_pollutants)
registered_pollutants <- sum(data[[pollutant]][!is.na(data[[pollutant]])])
registered_pollutants <- sum(data[[pollutant]][!is.na(data[[pollutant]])])
registered_pollutants <- data[[pollutant]][!is.na(data[[pollutant]])]
length(registered_pollutants)
registered_pollutants[117]
registered_pollutants[118]
sum(registered_pollutants)
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
complete_data <- data.frame(id=numeric(), nobs=numeric())
complete_data
dat <- data.frame(id=1, nobs=117)
dat
rbind(complete_data, dat)
complete_data <- rbind(complete_data, dat)
complete_data
View(complete_data)
rm(complete_data)
rm(dat)
data <- read.csv("specdata/001.csv")
head(data)
data[!is.na(data[["sulfate"]]) & !is.na(data[["nitrate"]])]
data[1][!is.na(data[["sulfate"]]) & !is.na(data[["nitrate"]])]
data[!is.na(data[["sulfate"]])]
data[!is.na(data[[1]])]
data[!is.na(data[[2]])]
data[[2]]
is.na(data[[2]])
!is.na(data[[2]])
data[!is.na(data[[2]])]
data[2][!is.na(data[[2]])]
data[2]
data[2][1]
data[2]
data[[2]]
data[[2]][1]
data[[2]][!is.na(data[[2]])]
cbind(data[[2]][!is.na(data[[2]]) & !is.na(data[["nitrate"]])], data[[3]][!is.na(data[[2]]) & !is.na(data[["nitrate"]])])
head(cbind(data[[2]][!is.na(data[[2]]) & !is.na(data[["nitrate"]])], data[[3]][!is.na(data[[2]]) & !is.na(data[["nitrate"]])]))
head(data[[2]][!is.na(data[[2]]) & !is.na(data[["nitrate"]])])
length(data[[2]][!is.na(data[[2]]) & !is.na(data[["nitrate"]])])
length(data[[2]][!is.na(data[["sulfate"]]) & !is.na(data[["nitrate"]])])
rm(data)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
?cor
complete_data <- complete("specdata")
head(complete_data)
threshold <- 150
i = 1
if (complete_data[["nobs"]][i] <= threshold) {
next
}
complete_data[["nobs"]][i] <= threshold
i = 2
complete_data[["nobs"]][i] <= threshold
path <- file.path(directory, paste("002", ".csv", sep = ""))
path <- file.path("specdata", paste("002", ".csv", sep = ""))
data = read.csv(path)
head(data)
sulfate <- data[["sulfate"]][!is.na(data[["sulfate"]]) & !is.na(data[["nitrate"]])]
nitrate <- data[["nitrate"]][!is.na(data[["sulfate"]]) & !is.na(data[["nitrate"]])]
?cor
cor(sulfate, nitrate)
print(R.version.string)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
?factor
x <- factor(c(1, 2))
x
unclass(x)
x <- factor(c("a", "b"))
x
unclass(x)
x <- factor(c("yes", "no"))
x
x <- factor(c("yes", "no"), levels = "yes")
x
x <- factor(c("yes", "no"), levels = c("yes", "no"))
x
unclass(x)
x[1]
x[1] + 1
class(x[1])
y <- c("yes", "no")
x <- factor(y, levels = y)
x
y
split(y, x)
split(c(1, 0), x)
colMeans
